#ifndef _GraphBuilder_GraphBuilder_h_
#define _GraphBuilder_GraphBuilder_h_
#include <SmartUppBot/SmartBotUpp.h>
#include <CtrlLib/CtrlLib.h>

using namespace Upp;


class Discord_DrawPackage: public DiscordModule{
	private:
		//Events discord
		void drawTest(ValueMap payload);
		void DrawGraph(ValueMap payload);
		void testVraiGraph(ValueMap payload);
		
		//Method of class used to generate the graph 
	//	void SaveGraph(graphicalImage &myImage,String fileName="temp.png");
	
		bool isStringisANumber(String stringNumber);
		
	public:
		
		Discord_DrawPackage(Upp::String _name, Upp::String _prefix);
		void Events(ValueMap payload);
	
};


//Virtual Class, supposed to be inherrited to new graph type
class Graph{
	private:
		String graphName=""; //name of graph 
		String XName=""; //Name of X axis
		String YName=""; //Name of Y axis
		Size sz;
	public: 
		virtual void SetGraphName(Upp::String _GraphName);
		virtual Upp::String GetGraphName();
		
		virtual void DefineSize(Size _sz); //Size value can be acced from size.cx / size.cy
		virtual Size GetSize(); //Return size of Graph (size representing Size of Image would get generated by DrawGraph method)
		
		virtual void DefineXName(String _XName);
		virtual void DefineYName(String _YName);
		virtual String GetXName();
		virtual String GetYName();
};



/***********************************************/
// Oject used to Represent DotCloud graph 
/***********************************************/
class Courbe;

class GraphDotCloud : Graph{
	private:
		const String graphType="DotCloud";
		
		Vector<Courbe> AllDots;
	public:
		String TypeOfGraph(); //Return type of graph
		ImageDraw DrawGraph(); //Used to return an ImageDraw representing the graph
		
		//Bunch of constructor
		GraphDotCloud(int _XSize,int _YSize);
		GraphDotCloud(int _XSize,int _YSize,String _GraphName);
		GraphDotCloud(int _XSize,int _YSize,String _GraphName, String _XName, String _YName);
		GraphDotCloud(Size _sz,String _GraphName, String _XName, String _YName);
		GraphDotCloud(Size _sz,String _GraphName);
		GraphDotCloud(Size _sz);
};

class Dot{
		
};

/***********************************************/
// End of Courbe graph
/***********************************************/




#endif
